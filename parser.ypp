%{
  #include <stdio.h>
  #include <stdlib.h>
  #include <string>
  #include <iostream>

extern int yylex();
  void endProgram();
  float total=0;
  void updateTotal(float value);
  void yyerror(std::string errmsg);
%}
%union {
  float fval;
  int ival;
  std::string *sval;
}
%token <sval> NAME
%token <ival> NUMBER
%token <fval> FNUMBER
%type <fval> expression
%type <fval> term
%type <fval> factor
%%
program:  statements            { endProgram(); }
       ;

statements: statement '\n' statements
          | statement
          ;

statement:  NAME '=' expression { updateTotal($3);
                                  std::cout << $1 << " = " << $3 << std::endl;}
        |       expression      { updateTotal($1);
                                  std::cout << "= " << $1 << std::endl; }
        ;

expression: expression '+' term { $$ = $1 + $3; }
          | expression '-' term { $$ = $1 - $3; }
          | term                { $$ = $1; }
          ;

term: term '*' factor           { $$ = $1 * $3; }
    | term '/' factor           { $$ = $1 / $3; }
    | factor                    { $$ = $1; }
    ;

factor: '(' expression ')'      { $$ = $2; }
      | NUMBER                  { $$ = $1; }
      | FNUMBER                 { $$ = $1; }
%%
void endProgram()
{
        std::cout << "Your total is " << total << ", Goodbye" << std::endl;
        exit(0);
}

void yyerror(std::string errmsg)
{
    std::cerr << errmsg << std::endl;
}

void updateTotal(float value)
{
        total+=value;
}
